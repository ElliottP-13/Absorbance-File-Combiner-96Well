knitr::opts_chunk$set(echo = TRUE)
library(plot3D)
##Load the required R packages:
library("staRdom")
cores <- detectCores(logical = FALSE) #This lines selects the appropriate # of cores to use to minimize the amount of computing time.
library(ggplot2)
library(plotly)
library(plot3D)
library(writexl)
# Find folder with all the raw EEMs and EEM blanks and name it as an object called "folder"
folder <- "PATH TO EEMS DATA"
# Read in the raw EEMs data into an object called "eem_list"
eem_list <- eem_read(folder, recursive = TRUE, import_function = "fluoromax4")
# Find folder with all the raw EEMs and EEM blanks and name it as an object called "folder"
folder <- "./EEMS_proj20220309/20220309/"
# Read in the raw EEMs data into an object called "eem_list"
eem_list <- eem_read(folder, recursive = TRUE, import_function = "fluoromax4")
# Do the same for the UV/vis data
absorbance_path = "./UV_Vis/"
absorbance <- absorbance_read(absorbance_path, cores = cores)
# The eem_checkdata function looks for abnormalities in the data format. This step can be used at any point in the data processing pipeline.
problem <- eem_checkdata(eem_list,absorbance,error=FALSE)
eem_overview_plot(eem_list, spp=12, contour = FALSE)#spp parameter designates number of EEMs per plot and contour=TRUE shows contour lines.
# Find folder with all the raw EEMs and EEM blanks and name it as an object called "folder"
folder <- "./EEMS_proj20220309/data/"
# Read in the raw EEMs data into an object called "eem_list"
eem_list <- eem_read(folder, recursive = TRUE, import_function = "fluoromax4")
# Do the same for the UV/vis data
absorbance_path = "./UV_Vis/"
absorbance <- absorbance_read(absorbance_path, cores = cores)
# The eem_checkdata function looks for abnormalities in the data format. This step can be used at any point in the data processing pipeline.
problem <- eem_checkdata(eem_list,absorbance,error=FALSE)
eem_overview_plot(eem_list, spp=12, contour = FALSE)#spp parameter designates number of EEMs per plot and contour=TRUE shows contour lines.
# Find folder with all the raw EEMs and EEM blanks and name it as an object called "folder"
folder <- "./EEMS_proj20220309/data/"
# Read in the raw EEMs data into an object called "eem_list"
eem_list <- eem_read(folder, recursive = TRUE, import_function = "fluoromax4")
# Do the same for the UV/vis data
absorbance_path = "./UV_Vis/"
absorbance <- absorbance_read(absorbance_path, cores = cores)
# The eem_checkdata function looks for abnormalities in the data format. This step can be used at any point in the data processing pipeline.
problem <- eem_checkdata(eem_list,absorbance,error=FALSE)
eem_overview_plot(eem_list, spp=12, contour = FALSE)#spp parameter designates number of EEMs per plot and contour=TRUE shows contour lines.
# Find folder with all the raw EEMs and EEM blanks and name it as an object called "folder"
folder <- "./EEMS_proj20220309/data/"
# Read in the raw EEMs data into an object called "eem_list"
eem_list <- eem_read(folder, recursive = TRUE, import_function = "fluoromax4")
# Do the same for the UV/vis data
absorbance_path = "./UV_Vis/"
absorbance <- absorbance_read(absorbance_path, cores = cores)
# The eem_checkdata function looks for abnormalities in the data format. This step can be used at any point in the data processing pipeline.
problem <- eem_checkdata(eem_list,absorbance,error=FALSE)
eem_overview_plot(eem_list, spp=12, contour = FALSE)#spp parameter designates number of EEMs per plot and contour=TRUE shows contour lines.
# Find folder with all the raw EEMs and EEM blanks and name it as an object called "folder"
folder <- "./EEMS_proj20220309/data/"
# Read in the raw EEMs data into an object called "eem_list"
eem_list <- eem_read(folder, recursive = TRUE, import_function = "fluoromax4")
# Do the same for the UV/vis data
absorbance_path = "./UV_Vis/"
absorbance <- absorbance_read(absorbance_path, cores = cores)
# The eem_checkdata function looks for abnormalities in the data format. This step can be used at any point in the data processing pipeline.
problem <- eem_checkdata(eem_list,absorbance)
# Find folder with all the raw EEMs and EEM blanks and name it as an object called "folder"
folder <- "./EEMS_proj20220309/data/"
# Read in the raw EEMs data into an object called "eem_list"
eem_list <- eem_read(folder, recursive = TRUE, import_function = "fluoromax4")
# Do the same for the UV/vis data
absorbance_path = "./UV_Vis/"
absorbance <- absorbance_read(absorbance_path, cores = cores)
# The eem_checkdata function looks for abnormalities in the data format. This step can be used at any point in the data processing pipeline.
problem <- eem_checkdata(eem_list,absorbance,error=TRUE)
# Find folder with all the raw EEMs and EEM blanks and name it as an object called "folder"
folder <- "./EEMS_proj20220309/data/"
# Read in the raw EEMs data into an object called "eem_list"
eem_list <- eem_read(folder, recursive = TRUE, import_function = "fluoromax4")
# Do the same for the UV/vis data
absorbance_path = "./UV_Vis/"
absorbance <- absorbance_read(absorbance_path, cores = cores)
# The eem_checkdata function looks for abnormalities in the data format. This step can be used at any point in the data processing pipeline.
#problem <- eem_checkdata(eem_list,absorbance,error=FALSE)
eem_overview_plot(eem_list, spp=12, contour = FALSE)#spp parameter designates number of EEMs per plot and contour=TRUE shows contour lines.
eem_list
type(eem_list)
eem_list[which(!is.finite(log_ret))] <- 0
eem_list[which(!is.finite(eem_list))] <- 0
is.finite(eem_list)
eem_list[1]
eem_list[3]
# Find folder with all the raw EEMs and EEM blanks and name it as an object called "folder"
folder <- "./EEMS_proj20220309/data/"
# Read in the raw EEMs data into an object called "eem_list"
eem_list <- eem_read(folder, recursive = TRUE, import_function = "fluoromax4")
# Do the same for the UV/vis data
absorbance_path = "./UV_Vis/"
absorbance <- absorbance_read(absorbance_path, cores = cores)
# The eem_checkdata function looks for abnormalities in the data format. This step can be used at any point in the data processing pipeline.
problem <- eem_checkdata(eem_list,absorbance,error=FALSE)
eem_overview_plot(eem_list, spp=12, contour = FALSE)#spp parameter designates number of EEMs per plot and contour=TRUE shows contour lines.
# Find folder with all the raw EEMs and EEM blanks and name it as an object called "folder"
folder <- "./EEMS_proj20220309/data/"
# Read in the raw EEMs data into an object called "eem_list"
eem_list <- eem_read(folder, recursive = TRUE, import_function = "fluoromax4")
# Do the same for the UV/vis data
absorbance_path = "./UV_Vis/"
absorbance <- absorbance_read(absorbance_path, cores = cores)
# The eem_checkdata function looks for abnormalities in the data format. This step can be used at any point in the data processing pipeline.
problem <- eem_checkdata(eem_list,absorbance,error=FALSE)
eem_overview_plot(eem_list, spp=12, contour = FALSE)#spp parameter designates number of EEMs per plot and contour=TRUE shows contour lines.
eem_list
